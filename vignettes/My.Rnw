\documentclass[a4paper,10pt]{article}

%\VignetteIndexEntry{PREDA tutorial}

\usepackage[latin1]{inputenc}
\usepackage[english]{babel}
\usepackage{fontenc}
\usepackage{graphicx}

\title{A short introduction to \textbf{ChIC} package}


\begin{document}
\maketitle

\begin{abstract}
The ChIP-seq quality Control package \textbf{ChIC} provides functions and data structures to compute three categories of QC metrics. 
User-friendly functions allow performing the whole analysis with a single command, whereas step by step functions are also available 
for more experienced users. The package comes with a large reference compendium of QC-metrics from public ChIP-seq samples, as described in  
\cite{chicpapero}. Key features of the package are functions for calculating, visualizing and creating summary plots of QC-metrics, 
including the profiles for metagene metrics against the reference compendium values. 
% the classifier models are also provided, to compute the single value quality score based on our random forest models.
\end{abstract} 

\newpage

\tableofcontents

\newpage

\section{QC-metrics from Cross-correlation analysis and metrics designed for sharp-peak profiles}
\textit{crossCorrelation} is a wrapper function that calculates a number of QC-metrics from cross-correlation analysis and from peak-calling. 

<<eval=FALSE, echo=TRUE >>=
CC_Result=crossCorrelation(chipName=chipName,
inputName=inputName, 
read_length=36, 
dataPath=dataDirectory, 
annotationID="hg19",
savePlotPath=getwd())
@

The wrapper is using the following functions:
\subsection{Loading BAM files}
The first step reads the ChIP-seq data ("bam" file format). ChIC expects exactly two bam files: the immunoprecipitation (ChIP) and the input. The "dataPath" should 
contain the directory were bam files are stored.

<<eval=FALSE, echo=TRUE >>=
chipName="ENCFF000BLL"
inputName="ENCFF000BKA"

chip.data=f_readFile(chipName,f_path=dataPath)
input.data=f_readFile(inputName,f_path=dataPath)
@


\subsection{Calculate QC-metrics from CrossCorrelation analysis}
The example shows the calculation of QC-metrics for the ChIP. An important parameter that has to be passed to the \textit{calculateCrossCorrelation} 
function is the binding-characteristics, previously calculated using \textit{get.binding.characteristics} function. 
The binding.characteristics structure provides information about the peak separation distance and the cross-correlation profile (for more details see \cite{spp}). 

<<eval=FALSE, echo=TRUE >>=
chip_binding.characteristics<-get.binding.characteristics(chip.data, 
srange=estimating_fragment_length_range, bin=estimating_fragment_length_bin,
accept.all.tags=T)

#calculate cross correlation QC-metrics for ChIP data
crossvalues_Chip<-calculateCrossCorrelation(chip.data,
chip_binding.characteristics,
read_length=read_length,
savePlotPath=savePlotPath,
plotname="ChIP")
@

It is important to save the "tag.shift" value, as this value will be needed for peak-calling and the metagene caluculation. 
<<eval=FALSE, echo=TRUE >>=
final.tag.shift<-crossvalues_Chip$tag.shift
@
The function returns QC-metrics from cross-correlation and QC-metrics designed for sharp-peak profiles \cite{chicpapero}. For example:
\begin{verbatim}
> str(crossvalues_Chip)
List of 20
 $ CC_StrandShift		: num 165
 $ tag.shift			: num 82
 $ N1				: num 17767863
 $ Nd				: num 18898775
 $ CC_PBC			: num 0.94
 $ CC_readLength		: num 36
 $ CC_UNIQUE_TAGS_LibSizeadjusted:num 9654737
 $ CC_NSC			: num 1.03
 $ CC_RSC			: num 0.494
 $ CC_QualityFlag		: num -1
 $ CC_shift.			: num 165
 $ CC_A.			: num 0.212
 $ CC_B.			: num 0.219
 $ CC_C.			: num 0.205
 $ CC_ALL_TAGS			: int 20191301
 $ CC_UNIQUE_TAGS		: int 18898775
 $ CC_UNIQUE_TAGS_nostrand	: int 18826294
 $ CC_NRF			: num 0.936
 $ CC_NRF_nostrand		: num 0.932
 $ CC_NRF_LibSizeadjusted	: num 0.965
\end{verbatim}
This has to be done for ChIP and Input.

savePlotPath provides the path in which the cross-correlation plot should be saved. If not given the plot will be printed on the screen. An example of a cross-correlation profile 
is shown in Figure \ref{ccPlot}.

\begin{figure}[htbp]
 \centering
.\includegraphics{ChIP_CrossCorrelation.pdf}
 \caption{Cross-correlation plot showing }
 \label{fig:ccPlot}
\end{figure}


\subsection{Calculate QC-metrics from peak calls}
The last step is the calculation of QC-metrics based on the called peaks. \textit{removeLocalTagAnomalies} function performs two steps: it selects only tags with acceptable alignment quality (disabled in the current version) and removes local tag anomalies like extremely high tag counts compared to the neighbourhood (for more details see \cite{spp}). The function \textit{getBindingRegionsScores} returns a number of QC-metrics based on the called peaks \cite{Chicpaper}.


<<eval=FALSE, echo=TRUE >>=
selectedTags=f_removeLovalTagAnomalies(chip.data,
input.data,
chip_binding.characteristics,
input_binding.characteristics)

chip.dataSelected=selectedTags$chip.dataSelected

#get QC-values from peak calling
bindingScores=getBindingRegionsScores(chip.data,
input.data, 
chip.dataSelected,
input.dataSelected,
final.tag.shift)
@

The function returns a list of QC-metrics:

\begin{verbatim}
> str(bindingScores)
List of 6
 $ CC_FDRpeaks          : num 0
 $ CC_evalpeaks         : num 2
 $ CC_FRiP_broadPeak    : num 0.066
 $ CC_FRiP_sharpPeak    : num 0
 $ CC_outcountsBroadPeak: int 1340797
 $ CC_outcountsSharpPeak: int 354

\end{verbatim}

\subsection{Profile smoothing}
The last step is the smoothing of the profile. The tag density profile is the tag profile, smoothed by the Gaussian kernel (for more details see \cite{spp}) and is used in the following steps.

<<eval=FALSE, echo=TRUE >>=
smoothed.densityChip=f_tagDensity(chip.dataSelected,
final.tag.shift,rngl=rngl)
@	


\section{QC-metrics on global read distribution and "fingerprint" plot}
This set of values is based on the global read distribution along the genome for ChIP and Input data \cite{Chance}. 
The  function \textit{QCscores\_global} reproduces the so-called "fingerprint" plot \ref{ChancePlot} and returns a list of 9 QC-metrics that can be sampled from the cumulative distribution of the plot. Examples are the (a) fraction of bins without reads for ChIP and input, (b) the point of maximum distance between the ChIP and input (x-coordinate, y-coordinate for ChIP and input, the distance calculated as absolute difference between the two y-coordinates, the sign of the difference), (c) the fraction of reads in the top 1 percent of bins with highest coverage for ChIP and input. 

<<eval=FALSE, echo=TRUE >>=
Ch_Results=QCscores_global(densityChip=smoothedDensityChip,
densityInput=smoothedDensityInput,
savePlotPath=getwd())
@


\begin{verbatim}
> str(Ch_Results)
List of 9
 $ Ch_X.axis                       : num 0.661
 $ Ch_Y.Input                      : num 0.091
 $ Ch_Y.Chip                       : num 0.126
 $ Ch_sign_chipVSinput             : num 1
 $ Ch_FractionReadsTopbins_chip    : num 0.097
 $ Ch_FractionReadsTopbins_input   : num 0.1
 $ Ch_Fractions_without_reads_chip : num 0.362
 $ Ch_Fractions_without_reads_input: num 0.426
 $ Ch_DistanceInputChip            : num 0.035
\end{verbatim}



\begin{figure}[htbp]
 \centering
.\includegraphics{FingerPrintPlot.pdf}
 \caption{Fingerprint plot }
 \label{fig:ChancePlot}
\end{figure}


\section{Metagene profiles and QC-metrics based on local enrichment}
\textit{createMetageneProfile} creates the metagene profiles for scaled and non-scaled profiles. The function retursn
<<eval=FALSE, echo=TRUE >>=
Meta_Result=createMetageneProfile(smoothedDensityChip,smoothedDensityInput,tag.shift,annotationID="hg19")
@
Meta_Result$twopoint  Meta_Result$TSS       Meta_Result$TES   
<<eval=FALSE, echo=TRUE >>=

TSS_Plot=nonScaledMetageneProfile(Meta_Result$TSS$chip,Meta_Result$TSS$input,tag="TSS",savePlotPath=getwd(),debug=debug)
helper=TSS_Plot
helper$Feature=NULL
rownames(helper)=TSS_Plot$Feature
completeListOfValues=rbind(completeListOfValues,helper)

TES_Plot=nonScaledMetageneProfile(Meta_Result$TES$chip,Meta_Result$TES$input,tag="TES",savePlotPath=getwd(),debug=debug)
helper=TES_Plot
helper$Feature=NULL
rownames(helper)=TES_Plot$Feature
completeListOfValues=rbind(completeListOfValues,helper)

geneBody_Plot=scaledMetageneProfile(Meta_Result$twopoint$chip,Meta_Result$twopoint$input,savePlotPath=getwd(),debug=debug)
helper=geneBody_Plot
helper$Feature=NULL
rownames(helper)=geneBody_Plot$Feature
completeListOfValues=rbind(completeListOfValues,helper)
@
%\newpage
%\addcontentsline{toc}{section}{References}
%\bibliographystyle{unsrt}
%\bibliography{PREDA}


\end{document}

