% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GlobalFunctions.R
\name{qualityScores_EM}
\alias{qualityScores_EM}
\title{Wrapper function to calculate QC-metrics from 
cross-correlation analysis, QC-metrics designed for TFs and 
QC-metrics from peak-calls}
\usage{
qualityScores_EM(chipName, inputName, read_length, annotationID = "hg19",
  mc = 1, savePlotPath = NULL, debug = FALSE)
}
\arguments{
\item{chipName}{String, filename and path to the ChIP 
file (without extension)}

\item{inputName}{String, filename and path to the Input 
file (without extension)}

\item{read_length}{Integer, length of the reads}

\item{annotationID}{String, indicating the genome assembly (Default="hg19")}

\item{mc}{Integer, the number of CPUs for parallelization (default=1)}

\item{savePlotPath, }{set if Cross-correlation plot should be saved under 
"savePlotPath". Default=NULL and plot will be forwarded to stdout.}

\item{debug}{Boolean, to enter debugging mode (default= FALSE)}
}
\value{
returnList, contains
QCscores_ChIP List of QC-metrics with crosscorrelation values for the ChIP
QCscores_binding List of QCscores from peak calls
TagDensityChip Tag-density profile, smoothed by the Gaussian kernel 
(for further details see "spp" package)
TagDensityInput Tag density-profile, smoothed by the Gaussian kernel 
(for further details see "spp" package)
}
\description{
Wrapper function that reads input bam files and provides QC-metrics from 
cross-correlation analysis, from peak calling and general metrics like 
read-length or NRF. In total 22 features are calculated.

qualityScores_EM
}
\examples{

## This command is time intensive to run
## To run this example code the user MUST provide 2 bam files: 
## one for ChIP and one for the input". Here we used ChIP-seq 
## data from ENCODE. Two example files can be downloaded using the 
## following link:
## https://www.encodeproject.org/files/ENCFF000BLL/
## https://www.encodeproject.org/files/ENCFF000BKA/
## and save them in the working directory (here given in the 
## temporary directory "filepath"

mc=4
\dontrun{
filepath=tempdir()
setwd(filepath)
system("wget https://www.encodeproject.org/files/ENCFF000BLL/@@download/ENCFF000BLL.bam")
system("wget https://www.encodeproject.org/files/ENCFF000BKA/@@download/ENCFF000BKA.bam")

chipName=file.path(filepath,"ENCFF000BLL")
inputName=file.path(filepath,"ENCFF000BKA")
CC_Result=qualityScores_EM(chipName=chipName, inputName=inputName, 
read_length=36, mc=mc,savePlotPath=filepath)
}
}
