% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ComparisonFunctions.R
\name{predictionScore}
\alias{predictionScore}
\title{Predict score}
\usage{
predictionScore(chrommark, features_cc, features_global, features_TSS,
  features_TES, features_scaled)
}
\arguments{
\item{chrommark}{String, chromatin mark to be analysed. Has to be 
one of the following: H3K36me3, H3K4me3, H3K79me2, H4K20me1,H2AFZ,
H3K27me3, H3K9me3,H3K27ac, POLR2AphosphoS5, H3K9ac, H3K4me2, H3K9me1,
H3K4me1, H3K79me1, H3K4ac, 
H3K14ac, H2BK5ac, H2BK120ac, H2BK15ac, H4K91ac, H4K8ac, H3K18ac, 
H2BK12ac, H3K56ac, H3K23ac, H2AK5ac, H2BK20ac, H4K5ac, H4K12ac, 
H2A.Z, H3K23me2,
H2AK9ac, H3T11ph. For RNAPOL2 different variants are available: 
POLR2A (for RNAPol2), POLR3G and POLR2AphosphoS2}

\item{features_cc}{list, with QC-metrics returned from 
qualityScores_EM()}

\item{features_global}{list, list with QC-metrics returned from 
qualityScores_GM()}

\item{features_TSS}{list, list with QC-metrics returned from 
qualityScores_LM() with option TSS}

\item{features_TES}{list,  list with QC-metrics returned from 
qualityScores_LM() with option TES}

\item{features_scaled}{list, list with QC-metrics returned from 
qualityScores_LMgenebody()}
}
\value{
something something
}
\description{
predictionScore
}
\examples{

## To execute this command the user has to run the entire pipeline
## (time intensive to run)

## To run this example code the user MUST provide 2 bam files: 
## one for ChIP and one for the input". Here we used ChIP-seq 
## data from ENCODE. Two example files can be downloaded using the 
## following link:
## https://www.encodeproject.org/files/ENCFF000BLL/
## https://www.encodeproject.org/files/ENCFF000BKA/
## and save them in the working directory (here given in the 
## temporary directory "filepath"

\dontrun{
filepath=tempdir()
setwd(filepath)
chipName="ENCFF000BLL"
inputName="ENCFF000BKA"
mc=4

CC_Result=qualityScores_EM(chipName=chipName, inputName=inputName, 
read_length=36, mc=mc,savePlotPath=filepath)

##save tag.shift value
finalTagShift=CC_Result$QCscores_ChIP$tag.shift

##save the smooted profile
smoothedDensityInput=CC_Result$TagDensityInput
smoothedDensityChip=CC_Result$TagDensityChip

##caluclate GM QC-metrics
Ch_Results=qualityScores_GM(densityChip=smoothedDensityChip,
densityInput=smoothedDensityInput,savePlotPath=filepath)

##caluclate metagene profiles
Meta_Result=createMetageneProfile(smoothedDensityChip,smoothedDensityInput,
finalTagShift,annotationID="hg19",mc=mc)

##get LM QC-values
TSSProfile=qualityScores_LM(Meta_Result$TSS,tag="TSS",savePlotPath=filepath)
TESProfile=qualityScores_LM(Meta_Result$TES,tag="TES",savePlotPath=filepath)
geneBody_Plot=qualityScores_LMgenebody(Meta_Result$geneBody,savePlotPath=filepath)

##Finally use all calculated QC-metrics to predict the final score
predictionScore(chrommark="H3K36me3", features_cc=CC_Result,
features_global=Ch_Results,features_TSS=TSSProfile, features_TES=TESProfile,
features_scaled=geneBody_Plot)
}
}
