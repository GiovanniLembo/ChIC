% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ComparisonFunctions.R
\name{predictionScore}
\alias{predictionScore}
\title{Predict score}
\usage{
predictionScore(chrommark, features_cc, features_global, features_TSS,
  features_TES, features_scaled)
}
\arguments{
\item{chrommark}{String, chromatin mark to be analysed. Has to be 
one of the following: H3K36me3, H3K4me3, H3K79me2, H4K20me1,H2AFZ,
H3K27me3, H3K9me3,H3K27ac, POLR2AphosphoS5, H3K9ac, H3K4me2, H3K9me1,
H3K4me1, H3K79me1, H3K4ac, 
H3K14ac, H2BK5ac, H2BK120ac, H2BK15ac, H4K91ac, H4K8ac, H3K18ac, 
H2BK12ac, H3K56ac, H3K23ac, H2AK5ac, H2BK20ac, H4K5ac, H4K12ac, 
H2A.Z, H3K23me2,
H2AK9ac, H3T11ph. For RNAPOL2 different variants are available: 
POLR2A (for RNAPol2), POLR3G and POLR2AphosphoS2}

\item{features_cc}{list, with QC-metrics returned from 
qualityScores_EM()}

\item{features_global}{list, list with QC-metrics returned from 
qualityScores_GM()}

\item{features_TSS}{list, list with QC-metrics returned from 
qualityScores_LM() with option TSS}

\item{features_TES}{list,  list with QC-metrics returned from 
qualityScores_LM() with option TES}

\item{features_scaled}{list, list with QC-metrics returned from 
qualityScores_LMgenebody()}
}
\value{
something something
}
\description{
predictionScore
}
\examples{
## This command is time intensive to run
##To run the example code the user must provide 2 bam files: 
##one for ChIP and one for the input'. Here we used ChIP-seq 
##data from ENCODE. Two example files can be downloaded as follows
## get bam file
setwd(tempdir())

chipName='ENCFF000BLL'
\dontrun{
##chip data
system('wget 
https://www.encodeproject.org/files/ENCFF000BLL/@download/ENCFF000BLL.bam')
chip.data=readBamFile(chipName)

##input data
system('wget 
https://www.encodeproject.org/files/ENCFF000BLL/@download/ENCFF000BKA.bam')
inputName='ENCFF000BKA'
input.data=readBamFile(inputName)

##caluclate first set of QC-metrics
CC_Result=qualityScores_EM(chipName=chipName, inputName=inputName, 
read_length=36, mc=5, annotationID='hg19')

##save the tagshift as it is needed later
tag.shift=CC_Result$QCscores_ChIP$tag.shift

##smoothed tagdensities used as input for the next steps
smoothedDensityInput=CC_Result$TagDensityInput
smoothedChip=CC_Result$TagDensityChip

###GLOBAL features#########
##caluclate second set of QC-metrics
Ch_Results=qualityScores_GM(densityChip=smoothedChip,
densityInput=smoothedInput)

###LOCAL features########
##caluclate third set of QC-metrics
Meta_Result=createMetageneProfile(smoothed.densityChip=smoothedChip, 
smoothed.densityInput=smoothedInput,tag.shift=tag.shift,annotationID='hg19')

##create plots and get values
TSS_scores=qualityScores_LM(Meta_Result$TSS,tag='TSS')
TES_scores=qualityScores_LM(Meta_Result$TES,tag='TES')
geneBody_scores=qualityScores_LMgenebody(Meta_Result$geneBody)

te=predictionScore(chrommark='H3K36me3', features_cc=CC_Result,
features_global=Ch_Results,features_TSS=TSS_scores, features_TES=TES_scores,
features_scaled=geneBody_scores)
}
}
