% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GlobalFunctions.R
\name{tagDensity}
\alias{tagDensity}
\title{Smoothed tag density}
\usage{
tagDensity(data, tag.shift, annotationID = "hg19", mc = 1)
}
\arguments{
\item{data, }{data-structure with tag information (see readBamFile())}

\item{tag.shift, }{Integer containing the value of the tag shif, 
calculated by getCrossCorrelationScores()}

\item{annotationID}{String, indicating the genome assembly 
(Default="hg19")}

\item{mc}{Integer, the number of CPUs for parallelization (default=1)}
}
\value{
smoothed.density A list of lists, each list corresponds to a 
chromosome and contains a 
vector of coordinates of the 5' ends of the aligned tags
}
\description{
Calculates the smoothed tag density using spp::get.smoothed.tag.density

tagDensity
}
\examples{
print("Example Code")
## This command is time intensive to run
##To run the example code the user must provide 2 bam files: 
##one for ChIP and one for the input". Here we used ChIP-seq 
##data from ENCODE. Two example files can be downloaded as follows
## get bam file
setwd(tempdir())

\dontrun{
##chip data
system("wget 
https://www.encodeproject.org/files/ENCFF000BLL/@download/ENCFF000BLL.bam")
chipName="ENCFF000BLL"
chip.data=readBamFile(chipName)

##input data
system("wget 
https://www.encodeproject.org/files/ENCFF000BLL/@download/ENCFF000BKA.bam")
inputName="ENCFF000BKA"
input.data=readBamFile(inputName)

## calculate binding characteristics 
chip_binding.characteristics<-spp::get.binding.characteristics(chip.data, 
srange=c(0,500), bin=5,accept.all.tags=TRUE)

## calculate binding characteristics 
input_binding.characteristics<-spp::get.binding.characteristics(input.data, 
srange=c(0,500), bin=5,accept.all.tags=TRUE)

##get chromosome information and order chip and input by it
chrl_final=intersect(names(chip.data$tags),names(input.data$tags))
chip.data$tags=chip.datatags[chrl_final]
chip.data$quality=chip.data$quality[chrl_final]
input.data$tags=input.data$tags[chrl_final]
input.data$quality=input.data$quality[chrl_final]

##remove sigular positions with extremely high tag counts with 
##respect to the neighbourhood
selectedTags=removeLocalTagAnomalies(chip.data, input.data, 
chip_binding.characteristics, input_binding.characteristics)
input.dataSelected=selectedTags$input.dataSelected
chip.dataSelected=selectedTags$chip.dataSelected

##get smoothed tagdensity 
smoothedChip=tagDensity(data=chip.dataSelected, 
tag.shift=82,annotationID="hg19",mc=5)
}
}
